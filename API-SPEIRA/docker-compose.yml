version: "3.8"

services:
  app:
    container_name: api-speira-app
    build: .
    ports:
      - "${PORT:-3000}:${PORT:-3000}"
    env_file:
      - .env  # Todas las variables sensibles se cargan desde aquÃ­
    depends_on:
      mongo:
        condition: service_healthy
    networks:
      speira-network:
        aliases:
          - api-speira-app

  mongo:
    container_name: api-speira-mongo
    image: mongo:6.0.24
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
      - ./mongo-backups:/backups
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_ROOT_USERNAME}  # Desde .env
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_ROOT_PASSWORD}  # Desde .env
      - MONGO_INITDB_OPLOG_SIZE=1024
    command: >
      mongod --bind_ip_all
      --journal
      --wiredTigerCacheSizeGB 1
      --auth
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.auth('${MONGO_ROOT_USERNAME}', '${MONGO_ROOT_PASSWORD}'); db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      speira-network:
        aliases:
          - api-speira-mongo

  mongo-backup:
    container_name: mongo-backup
    image: mongo:6.0.24
    depends_on:
      - mongo
    volumes:
      - ./mongo-backups:/backups
      - ./backup.sh:/backup.sh
    environment:
      - MONGO_URI=${MONGO_URI}  
    entrypoint: ["/bin/bash", "/backup.sh"]
    networks:
      speira-network:
        aliases:
          - mongo-backup

volumes:
  mongo-data:

networks:
  speira-network:
    driver: bridge
    name: speira-network